using System;
using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;
using System.Security.Cryptography;
using JetBrains.FormatRipper.Compound;
using NUnit.Framework;

namespace JetBrains.FormatRipper.Tests
{
  [TestFixture]
  public sealed class CompoundFileTest
  {
    public readonly struct StreamInfo
    {
      public readonly string[] Names;
      public readonly Guid Clsid;
      public readonly string Hash;

      internal StreamInfo(string hash, params string[] names) :
        this(Guid.Empty, hash, names)
      {
      }

      internal StreamInfo(Guid clsid, string hash, params string[] names)
      {
        Names = names;
        Clsid = clsid;
        Hash = hash;
      }
    }

    [Flags]
    public enum CodeOptions
    {
      HasCmsBlob = 0x1
    }

    private static object?[] MakeSource(string resourceName, CompoundFile.FileType type, CodeOptions options, string? cmsBlobHash, string includeRanges, params StreamInfo[] streams) => new object?[] { resourceName, type, options, cmsBlobHash, includeRanges, streams };

    [SuppressMessage("ReSharper", "InconsistentNaming")]
    private static readonly object?[] Sources =
      {
        MakeSource("2dac4b.msi", CompoundFile.FileType.Msi, CodeOptions.HasCmsBlob, "4D628DAE27082C2FC80D0FD9AAEC6FD095DFCAE306F671A987E785BE13F6F684727F118B71143687D5A440352786218D", "0;0;[5440:14],[4000:278],[4AC0:12],[4B40:C],[4B00:20],[4B80:3C],[4C80:E],[4D00:60],[4E00:248],[6000:1CC5],[5080:3AC],[4BC0:78],[4C40:24],[4CC0:3C],[4DC0:1E],[4A80:24],[49C0:30],[4A00:18],[4A40:2A],[4D80:10],[4280:708],[2050:10]",
          new StreamInfo("AF7549BB3D6F120C3F94693939102319D3CC0F40BDDA6DB6C3C42B843614F847", "\x0005DigitalSignature"),
          new StreamInfo("D8C411FDEDE8A4835D4EB6120181633B39A390792E7C918C6119319B72E222A6", "\x0005MsiDigitalSignatureEx"),
          new StreamInfo("EC194B156003A8C8BAFF9F9E6131431D7DE0E58C1004452AAF9B7CA4E536401B", "\x0005SummaryInformation"),
          new StreamInfo("1FFA55BE36B1B2FD232B40440A0E2F353269BE9364F78123B165304ABDA3ADDD", "䡀㬿䏲䐸䖱"),
          new StreamInfo("7402B596915A8E61E303DD70AA5C5F3D1CBB6F7FFD7658E68AF5E3F7A363C8C5", "䡀㼿䕷䑬㭪䗤䠤"),
          new StreamInfo("AFE7503D1E6F1D40C7072C202E4EA22C026C36DF42CFD653679F945B2690F004", "䡀㼿䕷䑬㹪䒲䠯"),
          new StreamInfo("76988EA55E58B49CA0D3773EC53FB05920F1F84FB3BB63E5466CBA6C7EE53AAD", "䡀㽿䅤䈯䠶"),
          new StreamInfo("5D676C85BC707BDA905A6D29FECC2F73FC1B81046761D07CB5BEA401F312AEDC", "䡀㿿䏤䇬䗤䒬䠱"),
          new StreamInfo("8091ADE61E9F7F70627825307D56EBE3D4306AED3D59936A9C2F56141CF17FC1", "䡀䇊䌰㮱䈻䘦䈷䈜䘴䑨䈦"),
          new StreamInfo("243CC0AAEEFC473F232147F9FF039387EFB4934BC65902132271B8A90E6B4753", "䡀䇊䌰㾱㼒䔨䈸䆱䠨"),
          new StreamInfo("0B40E3632B1534EF1C844B1F4ED4822E3C21B5ABB257B4D64C680E297FE6495C", "䡀䇊䗹䛎䆨䗸㼨䔨䈸䆱䠨"),
          new StreamInfo("F9EFBD846ADF695FBFA282869C8668DECC852E1F23965EED404D8B90F16D3E75", "䡀䈏䗤䕸㬨䐲䒳䈱䗱䠶"),
          new StreamInfo("0C8DC3F3B959907095AB223A15CCD3B171FB8993479C5EA2AD15D26C82FC85A7", "䡀䈏䗤䕸䠨"),
          new StreamInfo("9B0E68CD7CCC41B7896CEA95D8830C6E7D919C2FC980B46F90E3ACDFB762099A", "䡀䈖䌧䠤"),
          new StreamInfo("82981664077131234FADD598032C574AF4698F6744288247FA9C6EF4602151DD", "䡀䈛䌪䗶䜵"),
          new StreamInfo("2A09C36BAAE2F1F86BD9EBC94B9576F0195112BB9F9E78B42C218643E733AF9A", "䡀䌍䈵䗦䕲䠼"),
          new StreamInfo("0576705106C9E097D195EE7DAAE81EAC4DC8CA004D8580D09C2DB9137C05AEC8", "䡀䌏䈯"),
          new StreamInfo("B5E1B3D5B7FA6CCFB626E778477CBDAA943E4C7CE55A34FFD7772EF3E03D412F", "䡀䑒䗶䏤㮯䈻䘦䈷䈜䘴䑨䈦"),
          new StreamInfo("C70BF252A2B28CC05997BE3FD1239601C899F547A61B33185DEBA87FB8AC4C8C", "䡀䑒䗶䏤㾯㼒䔨䈸䆱䠨"),
          new StreamInfo("9FC0C2977BBA7CA625173849250399CA9072B7CA7BE442BA57619E50958AD48B", "䡀䒌䓰䑲䑨䠷"),
          new StreamInfo("FFDFDAE6F5D60B9DEC32C58FA60DBEAE0C1DFA363602E7D48CE222B45571453E", "䡀䓞䕪䇤䠨"),
          new StreamInfo("8CA50B7A119E996F7617B1A7053D191DEB6C4E971455DA2C62B4BC691BAEA3F8", "䡀䕙䓲䕨䜷")),

        MakeSource("dbg_amd64_6.11.1.404.msi", CompoundFile.FileType.Msi, CodeOptions.HasCmsBlob, "2288A46FEF06EF291F1F93B19E25200286B7B082AFE2BDD7BC9166028A6E2246BB2D8DE538ECD9E534D9DAF5BA4B109C", "0;0;[A80:180],[1000:80],[9240:38],[EF8D80:2FE],[EFB9C0:436],[EFAC00:800],[EFB600:3B6],[EFCA00:1000],[EFBE00:C00],[EFDA00:2800],[F00400:FC00],[F10200:315A],[EF9080:180],[EF9400:A36],[EF7FC0:40],[EF8200:B76],[F34600:13E],[EF9E40:BB6],[8C00:80],[9280:180],[EF7600:9B6],[F34740:13E],[F14000:1000],[F13400:C00],[F15000:B000],[F20200:10000],[F30400:3F0E],[F34880:2C],[6C40:10],[66C0:F6],[67C0:40],[6A00:228],[7B80:80],[7E00:710],[4A00:120],[1A00:1000],[E00:E0],[6D40:4],[4B40:E],[8540:24],[4E80:37A],[900:24],[8C80:588],[B200:1000],[A600:400],[AE00:400],[C200:C00],[D200:C00],[E200:2000],[10400:4000],[AA00:400],[CE00:400],[DE00:400],[15400:3000],[18800:1C00],[1A800:2000],[1CC00:2800],[1F800:800],[20200:7ED],[14400:1000],[18400:400],[1A400:400],[1C800:400],[1F400:400],[20A00:E8],[1940:C0],[4800:1CC],[6C80:70],[1080:90],[5440:6C],[800:DC],[F348C0:44],[6500:1A4],[54C0:940],[6000:4E8],[8580:6],[6D00:30],[3600:1000],[2A00:C00],[4600:3C],[1140:C0],[1400:51C],[6D80:80],[7000:B38],[940:C8],[85C0:30],[4B80:3C],[A40:30],[5400:4],[4BC0:40],[4E00:60],[7B40:10],[9600:1000],[8A00:C8],[21600:1000],[20C00:A00],[22600:DA00],[30200:10000],[40400:FC00],[50200:10000],[60400:FC00],[70200:10000],[80400:FC00],[90200:10000],[A0400:FC00],[B0200:10000],[C0400:FC00],[D0200:10000],[E0400:FC00],[F0200:10000],[100400:FC00],[110200:10000],[120400:FC00],[130200:10000],[140400:FC00],[150200:10000],[160400:FC00],[170200:10000],[180400:FC00],[190200:10000],[1A0400:FC00],[1B0200:10000],[1C0400:FC00],[1D0200:10000],[1E0400:FC00],[1F0200:10000],[200400:FC00],[210200:10000],[220400:FC00],[230200:10000],[240400:FC00],[250200:10000],[260400:FC00],[270200:10000],[280400:FC00],[290200:10000],[2A0400:FC00],[2B0200:10000],[2C0400:FC00],[2D0200:10000],[2E0400:FC00],[2F0200:10000],[300400:FC00],[310200:10000],[320400:FC00],[330200:10000],[340400:FC00],[350200:10000],[360400:FC00],[370200:10000],[380400:FC00],[390200:10000],[3A0400:FC00],[3B0200:10000],[3C0400:FC00],[3D0200:10000],[3E0400:FC00],[3F0200:10000],[400400:FC00],[410200:10000],[420400:FC00],[430200:10000],[440400:FC00],[450200:10000],[460400:FC00],[470200:10000],[480400:FC00],[490200:10000],[4A0400:FC00],[4B0200:10000],[4C0400:FC00],[4D0200:10000],[4E0400:FC00],[4F0200:10000],[500400:FC00],[510200:10000],[520400:FC00],[530200:10000],[540400:FC00],[550200:10000],[560400:FC00],[570200:10000],[580400:FC00],[590200:10000],[5A0400:FC00],[5B0200:10000],[5C0400:FC00],[5D0200:10000],[5E0400:FC00],[5F0200:10000],[600400:FC00],[610200:10000],[620400:FC00],[630200:10000],[640400:FC00],[650200:10000],[660400:FC00],[670200:10000],[680400:FC00],[690200:10000],[6A0400:FC00],[6B0200:10000],[6C0400:FC00],[6D0400:FC00],[6E0200:10000],[6F0400:FC00],[700200:10000],[710400:FC00],[720200:10000],[730400:FC00],[740200:10000],[750400:FC00],[760200:10000],[770400:FC00],[780200:10000],[790400:FC00],[7A0200:10000],[7B0400:FC00],[7C0200:10000],[7D0400:FC00],[7E0200:10000],[7F0400:FC00],[800200:10000],[810400:FC00],[820200:10000],[830400:FC00],[840200:10000],[850400:FC00],[860200:10000],[870400:FC00],[880200:10000],[890400:FC00],[8A0200:10000],[8B0400:FC00],[8C0200:10000],[8D0400:FC00],[8E0200:10000],[8F0400:FC00],[900200:10000],[910400:FC00],[920200:10000],[930400:FC00],[940200:10000],[950400:FC00],[960200:10000],[970400:FC00],[980200:10000],[990400:FC00],[9A0200:10000],[9B0400:FC00],[9C0200:10000],[9D0400:FC00],[9E0200:10000],[9F0400:FC00],[A00200:10000],[A10400:FC00],[A20200:10000],[A30400:FC00],[A40200:10000],[A50400:FC00],[A60200:10000],[A70400:FC00],[A80200:10000],[A90400:FC00],[AA0200:10000],[AB0400:FC00],[AC0200:10000],[AD0400:FC00],[AE0200:10000],[AF0400:FC00],[B00200:10000],[B10400:FC00],[B20200:10000],[B30400:FC00],[B40200:10000],[B50400:FC00],[B60200:10000],[B70400:FC00],[B80200:10000],[B90400:FC00],[BA0200:10000],[BB0400:FC00],[BC0200:10000],[BD0400:FC00],[BE0200:10000],[BF0400:FC00],[C00200:10000],[C10400:FC00],[C20200:10000],[C30400:FC00],[C40200:10000],[C50400:FC00],[C60200:10000],[C70400:FC00],[C80200:10000],[C90400:FC00],[CA0200:10000],[CB0400:FC00],[CC0200:10000],[CD0400:FC00],[CE0200:10000],[CF0400:FC00],[D00200:10000],[D10400:FC00],[D20200:10000],[D30400:FC00],[D40200:10000],[D50400:FC00],[D60200:10000],[D70400:FC00],[D80200:10000],[D90400:FC00],[DA0200:10000],[DB0400:FC00],[DC0200:10000],[DD0400:FC00],[DE0200:10000],[DF0400:FC00],[E00200:10000],[E10400:FC00],[E20200:10000],[E30400:FC00],[E40200:10000],[E50400:FC00],[E60200:10000],[E70400:FC00],[E80200:10000],[E90400:FC00],[EA0200:10000],[EB0400:FC00],[EC0400:FC00],[ED0200:10000],[EE0400:FC00],[EF0200:7341],[450:10]",
          new StreamInfo("9C79B865FADA390AD546E3D98413E71A455873E8EF9859346A9A479E5B0C3474", "\x0005DigitalSignature"),
          new StreamInfo("70043E72CCD987F959A923442A03AD9BBB8326EE82E2C3AC5B9D840D03B6A74B", "\x0005SummaryInformation"),
          new StreamInfo("307969885BC9C351AF822621F4A9DD474A826CD9AEC8446C705946BC9BD5E261", "䅧䞪䄦䠥"),
          new StreamInfo("4F92E804A11453382EBFF7FB0958879BAE88FE3366306911DEC9D811CD306EED", "䌋䄱䜵㷾䚨"),
          new StreamInfo("573E3260EED63604F24F6F10CE5294E25E22FDA9E5BFD9010134DE6E684BAB98", "䌋䄱䜵㾾䠳"),
          new StreamInfo("6D9D7932DF530B5981728BFD036A111CE0934D41676CB16A8A14AC6E2337F7F2", "䌋䄱䜵䅾䑤䕱䐥䠳"),
          new StreamInfo("050282E679AC80F6A357FFF92F1E7A95D30A06B35247E25CBFD2DD8CEEE1A412", "䌋䄱䜵䆾䐲䏳䗨䠬"),
          new StreamInfo("719E644C31D0CC6B891F6A1253655DFBA39A3B78E06D24817BE1D8492B172B48", "䌋䄱䜵䆾䖸䌷䒦䠱"),
          new StreamInfo("E4BCA4149BE5B0F1EC5AFD260BF6AA5AB5D0F2C52A084816E4DDC96C9FF0E1B0", "䌋䄱䜵䇾䊯䐥䠳"),
          new StreamInfo("593F94EF1405422B3E453F4422B22C990D84303668D60344C6FD257318E92428", "䌋䄱䜵䈾䆻䄯䌰䠦"),
          new StreamInfo("9AE4A96BF2A349667E844ACC1E2AC4F89361A6182268438F4D063DF3A6FC47BC", "䌋䄱䜵䌾䉱䠲"),
          new StreamInfo("48278165490487EE414BE65E20501B19A65EDAF1B6F473EB7D8C55023175EC88", "䌋䄱䜵䌾䖱䌷䒦䠱"),
          new StreamInfo("88DD7EE9FA22ECDBDC6B3D47DB83BC3D72360AEB43588E6A9A008B224389CB1C", "䌋䄱䜵䕾䐨䙲䆬䠲"),
          new StreamInfo("99D490C2BDEF5115F306A595964663540370141F65A25C5052352155F2603F68", "䌋䄱䜵䕾䓨䌤䌵䠦"),
          new StreamInfo("2BFB43DFE39BC78F404030B0E5FC0F24AAD46443CED5832B21CE435C7EC634B1", "䡀㬿䏲䐸䖱"),
          new StreamInfo("B03CC1B93FD92289E362515002329481D210F21A96DB6CE2EBE48965FF378BB5", "䡀㲞䈝䗻"),
          new StreamInfo("D5DB60CDB9A22CE8AD96B55F813EA72CF93658FA7341ABD4CA280D8EE79419F8", "䡀㼿䕷䑬㭪䗤䠤"),
          new StreamInfo("0FEBF240AC5DD67BCC730B5AA07EE272E89A9C5233C02CB42C6F8EF1420DDEDD", "䡀㼿䕷䑬㹪䒲䠯"),
          new StreamInfo("CFEC36DD7A0A23912D7545FFB4624B7A12C88370038496417726093FFBE3E55D", "䡀㽿䅤䈯䠶"),
          new StreamInfo("59F5059537A702AFAF515A219739D161EB23652B17B494F2143D8F52AD2B93DD", "䡀㿿䏤䇬䗤䒬䠱"),
          new StreamInfo("8C3319DC15EC94286B9CFEC8DD01D30B63CF2577024EFD5DC634DC48099A0B93", "䡀䄕䑸䋦䒌䇱䗬䒬䠱"),
          new StreamInfo("29680BEFA75D7ABB6D2BA5B6A63E3A747DF3A631896E9138B5406D10381EDD72", "䡀䄛䌧㫲䗸䒷䠱"),
          new StreamInfo("D423FCE16FCA3CCAC2BA7D8ECCC6433BE1FA8BE9521CD21385FB23B2ED22BB5C", "䡀䆊䌷䑲䈝䗻"),
          new StreamInfo("86C79C7C77EDA3707F43D453B870539C0C0E83019D91F90E33C7CEA83B6CF6AA", "䡀䇊䌰㮱䈻䘦䈷䈜䘴䑨䈦"),
          new StreamInfo("0E18019C58A5A38D421B2040AABB9DC0280A725842AE9D58B95626F8909B4836", "䡀䇊䌰㾱㼒䔨䈸䆱䠨"),
          new StreamInfo("455968305F040DA1530DE4851D8642DE5FAA20BD7E8BAC5E0032D57DF527201C", "䡀䇊䗹䛎䆨䗸㼨䔨䈸䆱䠨"),
          new StreamInfo("2B250CE4A899A69309D1D04EA79F4B35336250571ACFD766F5310D512964BE2D", "䡀䈏䗤䕸㬨䐲䒳䈱䗱䠶"),
          new StreamInfo("18757AA71F449F8139B5C933A5ED56C0D0169A5B5169CBC57D881E8785218AC4", "䡀䈏䗤䕸䠨"),
          new StreamInfo("DD98B30785F1C7D4585CD5E1737121738843F448CD3ED30941943D8F0BC2FCE9", "䡀䈖䌧䠤"),
          new StreamInfo("259613FD6B6C2E7CC108F09105963C8B942347333D62652BBFB9410FFF1C7E38", "䡀䈛䒰䈹䌏䈯"),
          new StreamInfo("04A7CE79E0CF4D1877FDFCA40E49DBDB28B594F27D0434F91D7D85846EAD9815", "䡀䈝䗻䗜䏼䠨"),
          new StreamInfo("A7A94DDB9F7B03DA9C6064EADDEFCA5C657BEE0ADD655BF56AC3395722D7DC5A", "䡀䋜䕲䆷䗸"),
          new StreamInfo("EB86C16231A8D488F84FF776502AF187182E3BD17D8E3AFEA81853918878C020", "䡀䌋䄱䜵"),
          new StreamInfo("B5FC09EAF6276FDFF37D0571C98DD023822019B3E3E42180DC3F884E8605CF6A", "䡀䌍䈵䗦䕲䠼"),
          new StreamInfo("453A8773AC8F2F03FF07238050816B566382B12C1B631B97365383F945DDEECD", "䡀䌍䏤䊲"),
          new StreamInfo("26FEDE7FA8FD81EF193A4FDAD858DD5F7D2674449F606787D2CAD4E6A449CB45", "䡀䌏䈯"),
          new StreamInfo("77369CA2EC3C585644E748555C5D1149733A7E84FDB872525B346ABE3F436FB2", "䡀䑒䗶䏤㮯䈻䘦䈷䈜䘴䑨䈦"),
          new StreamInfo("3B4CC6776EC50820CCE33895CD9EA649E8FC9C0A0831619D6E605D125840C84A", "䡀䑒䗶䏤㾯㼒䔨䈸䆱䠨"),
          new StreamInfo("14D6C98E16014D552812999A06E40E0414575AFD0C16FC780D48D56A09F35773", "䡀䒌䓰䑲䑨䠷"),
          new StreamInfo("C5B941C2F1304752BA62363CDE8FD3EDD72262097B0F5C22C23B1E07D95C0449", "䡀䒌䓰䒕䄦䒷䠵"),
          new StreamInfo("E24B47BC916893E672D279628DB3B636FE995771650D01C8F4CEFA73C840F056", "䡀䒌䗱䒵㬯䑲䌧䌷䑲"),
          new StreamInfo("D080CD55BCF0165587F1A587A678432D77A7C9CA2369830F41B35D0B98DE20F9", "䡀䒌䗱䒵㮯䈹䗱"),
          new StreamInfo("747A065A2BE2AC88508ADC31F85A29CD04700FF5C8FEA46DB374E952E31D5D16", "䡀䒌䗱䒵䠯"),
          new StreamInfo("F9C3838B66406208F647F88376A55A54A6458033734171093A057C28F436A723", "䡀䓊㼳䄨䆵䠫"),
          new StreamInfo("8C7784B61EEBE978FEEE3D2E7DC9F979D88A25D7E241EEB082EAADA33B7967D8", "䡀䓞䕪䇤䠨"),
          new StreamInfo("F473226C9BB2F6975BE47A3165B786802401FC4DDDB745B8C6F3DCCAE1CD1E0D", "䡀䕎䒵䠵"),
          new StreamInfo("B3FCD9939676C611D1DEDB7782687947A127A721CA4C661E8AE2C047C86F5624", "䡀䕙䓲䕨䜷"),
          new StreamInfo("309F8F593021D71F33BF74F580ADEE0788A6D4C4BA120B1C852D0F4D7F913AFC", "䡀䖖㯬䏬㱨䖤䠫"),
          new StreamInfo("EED096B3E44BF6EF6541D85DA8482B8E504A54C64A1ECE7FE90D5E71C931DEBB", "䡀䘌䗶䐲䆊䌷䑲"),
          new StreamInfo("DDF1ACCFFB26C0A6E07B06F221DCE3F430477DFDADBA86064ED9B6852C6ADDEB", "䡀䙎䑨㶷䓤䌳䊱")),

        MakeSource("test.ss", CompoundFile.FileType.Unknown, 0, null, "0;0;[5D940:80],[7680:28],[5D640:80],[5D300:100],[5D780:14],[5D880:B4],[5D7C0:40],[5D840:3C],[5D600:40],[5D6C0:C0],[5D800:34],[5D9C0:40],[6A00:C48],[CB600:677E],[4E00:1AA4],[4F800:D43A],[A0600:2AE94],[800:3411],[44000:2F24],[5CE00:4E1],[47200:600],[47E00:200],[62800:200],[72800:200],[82800:200],[92800:200],[D3600:44EA],[76C0:66],[450:10]",
          new StreamInfo("8B4805328B80297C36E0E04725B501BDFEEF5F8A6FA9ED8DF9A1252262A899D6", "\x0005DocumentSummaryInformation"),
          new StreamInfo("FB01075CEA18FB32A0061BF64628BC2251FFAD02993A449308B6D6A5BB3F8186", "\x0005SebiesnrMkudrfcoIaamtykdDa"),
          new StreamInfo("6ABEE3CB7DB326CBC5F44BBE064BE404F7B3C38AEE17F63666303BB26D878D2D", "\x0005SummaryInformation"),
          new StreamInfo("4D05D0E4C05F7DE6D9911B84E9F9C166D9427FD7C58718D042ED8747A8D7E5CC", "Codectest", "ZLib"),
          new StreamInfo("9535C7362D819ED76EC2897EA5668F51DF3CA949CF7BD40BD49F2259D3B12B32", "Codectest", "test"),
          new StreamInfo("9AEB0404BC8BBC97C8093ED5194F0920FA43DB189629C962F20175D9F01E654C", "Documents", "\x0005BffeaaaaAaaaaadaAaaaaaaaGc"),
          new StreamInfo("A56829B396C7DD31126B43D24EF92283D55A84A448DAB78CC3E8289D18332038", "Documents", "HTML"),
          new StreamInfo("44CB079B59B3E2C047A2BC2A8D5D1B6CECC552B4EE74433884B716F0FB35AB50", "Documents", "RTF"),
          new StreamInfo("BB01412FD8E2A0BCF302D086C4227B82993F2FC3F8996303FB3DCA0BA3850B75", "Documents", "TXT"),
          new StreamInfo("E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855", "Empty"),
          new StreamInfo("468B53A725B927893836E0506A32B4B5A38B6CDEB28F7F2F240DD759334D0A1E", "Pictures", "\x0005PebiesnrMkudrfcoIaamtykdDa"),
          new StreamInfo("FD29B3B084CF11160BFC4E99D98A261F2B36BFF29113B07367C5204563C5D355", "Pictures", "AnimatedGIF"),
          new StreamInfo("BFB175D89708B0571A9BE3412C9B0FD05D56AF7C198E23BB314BC2DAC757AF07", "Pictures", "BMP"),
          new StreamInfo("C6F6EB10A4472F02ADF0F74F0805AFB04A0BD0F4644A1EEFF94D9B36D2FFEAF6", "Pictures", "GIF"),
          new StreamInfo("2DF29E98E1AC9B74665C96A200F5259FF15FF937F63CBB29E6A33A546E44692A", "Pictures", "JPEG"),
          new StreamInfo("2812C5214506144845BFD0BFFB0372AE0433336DC7EA934EE820AF4DDA3A8FC3", "Pictures", "PNG"))
      };

    [TestCaseSource(typeof(CompoundFileTest), nameof(Sources))]
    [Test]
    public void Test(
      string resourceName,
      CompoundFile.FileType expectedType,
      CodeOptions expectedOptions,
      string? expectedCmsBlobHash,
      string expectedOrderedIncludeRanges,
      StreamInfo[] expectedStreams)
    {
      var file = ResourceUtil.OpenRead(ResourceCategory.Msi, resourceName, stream =>
        {
          Assert.IsTrue(CompoundFile.Is(stream));
          return CompoundFile.Parse(stream, CompoundFile.Mode.SignatureData | CompoundFile.Mode.ComputeHashInfo, (_, _, _) => true);
        });
      Assert.AreEqual(expectedType, file.Type);

      var hasCmsBlob = (expectedOptions & CodeOptions.HasCmsBlob) == CodeOptions.HasCmsBlob;
      var signedBlob = file.SignatureData.SignedBlob;
      var cmsBlob = file.SignatureData.CmsBlob;

      Assert.AreEqual(hasCmsBlob, file.HasSignature);
      Assert.IsNull(signedBlob);
      Assert.AreEqual(hasCmsBlob, cmsBlob != null);

      if (cmsBlob != null)
      {
        byte[] hash;
        using (var hashAlgorithm = SHA384.Create())
          hash = hashAlgorithm.ComputeHash(cmsBlob);
        Assert.AreEqual(expectedCmsBlobHash, HexUtil.ConvertToHexString(hash));
      }
      else
        Assert.IsNull(expectedCmsBlobHash);

      var fileExtractStreams = new List<CompoundFile.ExtractStream>(file.ExtractStreams);
      fileExtractStreams.Sort((x, y) =>
        {
          var minSize = Math.Min(x.Names.Length, y.Names.Length);
          for (var n = 0; n < minSize; ++n)
          {
            var res = string.CompareOrdinal(x.Names[n], y.Names[n]);
            if (res != 0)
              return res;
          }

          return x.Names.Length - y.Names.Length;
        });

      Assert.AreEqual(expectedStreams.Length, fileExtractStreams.Count);
      for (var n = 0; n < expectedStreams.Length; ++n)
      {
        Assert.AreEqual(expectedStreams[n].Clsid, fileExtractStreams[n].Clsid);
        Assert.AreEqual(expectedStreams[n].Names.Length, fileExtractStreams[n].Names.Length);
        for (var k = 0; k < expectedStreams[n].Names.Length; ++k)
          Assert.AreEqual(expectedStreams[n].Names[k], fileExtractStreams[n].Names[k]);
        byte[] hash;
        using (var hashAlgorithm = SHA256.Create())
          hash = hashAlgorithm.ComputeHash(fileExtractStreams[n].Blob);
        Assert.AreEqual(expectedStreams[n].Hash, HexUtil.ConvertToHexString(hash));
      }

      var computeHashInfo = file.ComputeHashInfo;
      Assert.IsNotNull(computeHashInfo);
      Assert.AreEqual(expectedOrderedIncludeRanges, computeHashInfo!.ToString());
    }
  }
}